(()=>{"use strict";({5810:function(){var n=this&&this.__awaiter||function(n,t,a,e){return new(a||(a=Promise))((function(s,o){function i(n){try{d(e.next(n))}catch(n){o(n)}}function c(n){try{d(e.throw(n))}catch(n){o(n)}}function d(n){var t;n.done?s(n.value):(t=n.value,t instanceof a?t:new a((function(n){n(t)}))).then(i,c)}d((e=e.apply(n,t||[])).next())}))};!function(){function t(){return n(this,void 0,void 0,(function*(){let n={isPhantomAvailable:!!window.solana,isWalletConnected:!!window.solana&&!!window.solana.isConnected};if(window.solana)try{const a=yield(t={onlyIfTrusted:!0},window.solana.connect(t));console.debug("Connected onlytrusted",a),n.isWalletConnected=!0,window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"solanaStatus",data:Object.assign(Object.assign({},n),{publicKey:a.publicKey.toBase58()})},"*")}catch(t){window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"solanaStatus",data:n},"*")}else window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"solanaStatus",data:n},"*");var t}))}window.addEventListener("message",(function(n){if(n.source!==window)return;const a=n.data;var e;a&&"PHANTOM_PROVIDER_REQUEST"===a.type&&("connect"===a.action?window.solana&&window.solana.connect().then((n=>{window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"solanaStatus",data:{isPhantomAvailable:!0,isWalletConnected:!0,publicKey:n.publicKey.toBase58()}},"*")})).catch((function(n){window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"solanaStatus",data:{isPhantomAvailable:!0,isWalletConnected:!1,error:n.toString()}},"*")})):"checkStatus"===a.action?t():"signMessage"===a.action?(e=a.data.message,window.solana&&window.solana.signMessage((new TextEncoder).encode(`${e}`)).then((n=>{window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"signResult",data:{hash:window.bs58.default.encode(n.signature)}},"*")})).catch((function(n){window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"signResult",data:{error:n.toString()}},"*")}))):"signTransaction"===a.action&&function(n){if(window.solana)try{const t=Uint8Array.from(atob(n),(n=>n.charCodeAt(0))),a={serialize:()=>t,serializeMessage:()=>t,signatures:[],instructions:[],recentBlockhash:"",feePayer:null,add:()=>a,partialSign:()=>a};window.solana.signTransaction(a).then((n=>{window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"signTransactionResult",data:{signedTransaction:n,success:!0}},"*")})).catch((function(n){window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"signTransactionResult",data:{error:n.toString(),success:!1}},"*")}))}catch(n){window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"signTransactionResult",data:{error:String(n),success:!1}},"*")}else window.postMessage({type:"PHANTOM_PROVIDER_RESPONSE",action:"signTransactionResult",data:{error:"Phantom wallet not available",success:!1}},"*")}(a.data.transaction))})),t()}()}})[5810]()})();